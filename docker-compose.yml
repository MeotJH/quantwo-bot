version: '3.8'

services:
  frontend:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-network
    environment:
      - FLASK_APP=wsgi.py
      - FLASK_ENV=PROD
      - ENVIRONMENT=PROD
      - SQLALCHEMY_DATABASE_URI=postgresql://myuser:mypassword@postgres:5432/mydb
    command: >
      sh -c "flask db upgrade && gunicorn wsgi:app -b 0.0.0.0:8080 --log-file=- --access-logfile=-"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/status/health-check"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
    - "5432:5432"
    networks:
      - app-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
